{"version":3,"sources":["RealmApp.js","HomePage.js","GamePage.js","HostPage.js","App.js","index.js"],"names":["RealmAppContext","React","createContext","useRealmApp","app","useContext","Error","RealmAppProvider","appId","children","useState","Realm","setApp","useEffect","currentUser","setCurrentUser","credentials","a","logIn","logOut","wrapped","Provider","value","HomePage","gameId","setGameId","history","useHistory","createGame","functions","handleCreateGame","push","style","display","flexDirection","alignItems","background","height","Typography","variant","fontFamily","color","textShadow","fontWeight","width","justifyContent","marginTop","Card","sx","maxWidth","CardContent","Button","onClick","marginBottom","Divider","TextField","type","onChange","event","target","GamePage","subscribed","setSubscribed","submitted","setSubmitted","caption","setCaption","game","setGame","useParams","submitCaption","console","log","mongodb","mongoClient","gamesCollection","db","collection","findOne","game_id","stream","watch","change","fullDocument","subscribe","handleSubmitCaption","Boolean","allow_submissions","image_url","border","borderColor","borderStyle","src","fullWidth","disabled","label","component","winning_caption","gutterBottom","mb","HostPage","randomArtUrl","setRandomArtUrl","retrievingRandomArtUrl","setRetrievingRandomArtUrl","settingArtUrlForGame","setSettingArtUrlForGame","selectedRow","setSelectedRow","enableSubmissions","disableSubmissions","getRandomArtCard","setArtUrlForGame","selectWinningCaption","toggleSubmissions","handleGetRandomArt","primaryImage","handleSelectArt","handleSelectWinner","submissions","ToggleButton","selected","boxShadow","Paper","overflow","TableContainer","maxHeight","Table","stickyHeader","minWidth","size","TableHead","TableRow","TableCell","length","TableBody","map","i","scope","RequireLoggedInUser","isLoggingIn","setIsLoggingIn","anonymous","login","App","basename","path","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d322ac4e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as Realm from \"realm-web\";\r\n\r\nconst RealmAppContext = React.createContext();\r\n\r\nexport const useRealmApp = () => {\r\n  const app = React.useContext(RealmAppContext);\r\n  \r\n  if (!app) {\r\n    throw new Error(\r\n      `You must call useRealmApp() inside of a <RealmAppProvider />`\r\n    );\r\n  }\r\n  return app;\r\n};\r\n\r\nexport const RealmAppProvider = ({ appId, children }) => {\r\n  // Wrap the Realm.App object with React state.\r\n  const [app, setApp] = React.useState(new Realm.App(appId));\r\n  \r\n  React.useEffect(() => {\r\n    setApp(new Realm.App(appId));\r\n  }, [appId]);\r\n\r\n  // Wrap the Realm.App object's user state with React state\r\n  const [currentUser, setCurrentUser] = React.useState(app.currentUser);\r\n\r\n  async function logIn(credentials) {\r\n    // Call the logIn() method with the given credentials\r\n    await app.logIn(credentials);\r\n    // If successful, app.currentUser is the user that just logged in\r\n    setCurrentUser(app.currentUser);\r\n  }\r\n  async function logOut() {\r\n    // Log out the currently active user\r\n    // Call the logOut() method on the current user.\r\n    await app.currentUser?.logOut();\r\n    // If another user was logged in too, they're now the current user.\r\n    // Otherwise, app.currentUser is null.\r\n    // Call the setCurrentUser() method on the app's current user.\r\n    setCurrentUser(app.currentUser);\r\n  }\r\n\r\n  const wrapped = { ...app, currentUser, logIn, logOut };\r\n\r\n  return (\r\n    <RealmAppContext.Provider value={wrapped}>\r\n      {children}\r\n    </RealmAppContext.Provider>\r\n  );\r\n};\r\n","import Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useRealmApp } from './RealmApp';\r\n\r\nfunction HomePage() {\r\n  const [gameId, setGameId] = useState('');\r\n  const history = useHistory();\r\n  const app = useRealmApp();\r\n  const { createGame } = app.currentUser.functions;\r\n\r\n  const handleGameIdChange = (event) => {\r\n    setGameId(event.target.value);\r\n  };\r\n\r\n  const handleJoinGame = () => {\r\n    history.push(`/game/${gameId}`);\r\n  };\r\n\r\n  const handleCreateGame = async () => {\r\n    const { gameId } = await createGame();\r\n\r\n    history.push(`/game/${gameId}/host`);\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      display: 'flex', \r\n      flexDirection: 'column', \r\n      alignItems: 'center', \r\n      background: 'repeating-linear-gradient(to right, rgba(115, 169, 255, 0.4), rgba(115, 169, 255, 0.4) 100px, #fffef6 100px, #fffef6 200px)',\r\n      height: '100vh'}}>\r\n\r\n      <Typography variant=\"h1\" style={{\r\n        fontFamily: 'Fleur De Leah', \r\n        color: 'gold', \r\n        textShadow: '2px 2px #000000'}}>\r\n        House of Memes\r\n      </Typography>\r\n      <Typography variant=\"h3\" style={{\r\n        fontFamily: 'Fleur De Leah', \r\n        color: 'black', \r\n        fontWeight: 500,\r\n        textShadow: '1px 1px 3px #000000'}}>\r\n        <i> Cleverness creates champions</i>\r\n      </Typography>\r\n      <br/>\r\n      \r\n      <div style={{\r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        width: '60%', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between',\r\n        marginTop: 20}}>\r\n\r\n        <Card sx={{ display: 'flex', maxWidth: 800 }}>\r\n          <CardContent>\r\n            <Typography variant=\"body\">\r\n              <b>Ever see a painting and think, \"That's exactly what our retrospectives look like: tiring, useless, and painful\"? 😂</b>\r\n            </Typography>\r\n            <br/>\r\n            <br/>\r\n            <Typography variant=\"body\">\r\n              Put that clever mind to use! This game is straightforward: a host selects a random piece of art, other players submit their funniest, tech-related caption, and then the host chooses the winner! Create a new game to be the host or Join an existing game by entering it's game ID. Happy memeing!\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n        <br/>\r\n        <b>Start from scratch!</b>\r\n\r\n        <Button \r\n          onClick={handleCreateGame}\r\n          variant=\"contained\"\r\n          style={{marginBottom: 20}}\r\n        >\r\n          Create New Game\r\n        </Button>\r\n\r\n        or\r\n\r\n        <Divider />\r\n\r\n        <b>Join Game</b> (enter existing game ID):\r\n        <div style={{display: 'flex', alignItems: \"flex-end\"}}>\r\n          <TextField\r\n            type=\"text\"\r\n            onChange={handleGameIdChange}\r\n            value={gameId}\r\n            variant=\"standard\"\r\n            style={{marginTop: 20}}\r\n          />\r\n          <Button onClick={handleJoinGame} variant=\"contained\">Join</Button>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport React, { useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useRealmApp } from './RealmApp';\r\n\r\nfunction GamePage() {\r\n  const [subscribed, setSubscribed] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [caption, setCaption] = useState('');\r\n  const [game, setGame] = useState({});\r\n  const { gameId } = useParams();\r\n  const app = useRealmApp();\r\n  const { submitCaption } = app.currentUser.functions;\r\n\r\n  useEffect(() => {\r\n    async function subscribe() {\r\n      console.log(`Subscribing to change stream for game ${gameId}`);\r\n      setSubscribed(true);\r\n      const mongodb = app.currentUser.mongoClient('mongodb-atlas');\r\n      const gamesCollection = mongodb.db('classic-cards').collection('games');\r\n\r\n      const game = await gamesCollection.findOne({ game_id: gameId });\r\n\r\n      setGame(game);\r\n\r\n      const stream = gamesCollection.watch({ 'fullDocument._id': gameId });\r\n      \r\n      for await (const change of stream) {\r\n        console.log('Game object updated', change);\r\n        setGame(change.fullDocument)\r\n      }\r\n    }\r\n\r\n    if (!subscribed) {\r\n      subscribe();\r\n    }\r\n  }, [app, gameId, subscribed]);\r\n\r\n  const handleCaptionChange = (event) => {\r\n    setCaption(event.target.value);\r\n  };\r\n\r\n  const handleSubmitCaption = async () => {\r\n    try {\r\n      await submitCaption(gameId, caption);\r\n    } finally {\r\n      setSubmitted(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      display: 'flex', \r\n      flexDirection: 'column', \r\n      alignItems: 'center', \r\n      background: 'repeating-linear-gradient( to right, rgba(115, 169, 255, 0.4), rgba(115, 169, 255, 0.4) 100px, #fffef6 100px, #fffef6 200px)',\r\n      height: '100vh'}}>\r\n       <Typography variant=\"h1\" style={{fontFamily: 'Fleur De Leah', color: 'gold', textShadow: '2px 2px #000000'}}>\r\n          House of Memes\r\n       </Typography>\r\n       <Typography variant=\"h3\" style={{fontFamily: 'Fleur De Leah', color: 'black', fontWeight: 500}}>\r\n         <i> Cleverness creates champions</i>\r\n       </Typography>\r\n      <br />\r\n      {Boolean(game.allow_submissions) && Boolean(game.image_url) &&\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: 30 }}>\r\n          <img style={{ border: 10, borderColor: '#CCA604', borderStyle: 'ridge', height: 500, marginBottom: 50 }} src={game.image_url} />\r\n\r\n\r\n          <Card sx={{ width: 420 }}>\r\n            <CardContent>\r\n              <Typography variant=\"body\" color=\"text.secondary\">\r\n                <b>Caption this art piece:</b>\r\n              </Typography>\r\n              <TextField fullWidth \r\n                onChange={handleCaptionChange} \r\n                value={caption} \r\n                disabled={submitted}\r\n                label=\"Enter a funny, tech-related caption...\" \r\n                variant=\"outlined\" \r\n                style={{marginTop: 20}}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Button \r\n            variant=\"contained\" \r\n            disabled={submitted} \r\n            onClick={handleSubmitCaption}\r\n            style={{marginTop: 20, marginBottom: 20}}\r\n          >\r\n            Submit caption\r\n          </Button>\r\n        </div>\r\n      }\r\n\r\n      {Boolean(!game.allow_submissions) && Boolean(!game.image_url) &&\r\n        <div>\r\n          <Typography component=\"p\">\r\n            Host is selecting an image. Please stand by!\r\n          </Typography>\r\n        </div>\r\n      }\r\n\r\n      {Boolean(!game.allow_submissions) && Boolean(game.image_url) &&\r\n        <div>\r\n          <img style={{ border: 10, borderColor: '#CCA604', borderStyle: 'ridge', height: 500 }} src={game.image_url} />\r\n\r\n          {Boolean(!game.winning_caption) && (\r\n            <Typography component=\"p\">\r\n              Host is selecting a winner. Please stand by!\r\n            </Typography>)}\r\n\r\n          {Boolean(game.winning_caption) && (\r\n            <Card sx={{ width: 420 }}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\" color=\"text.secondary\" gutterBottom>\r\n                  {game.winning_caption}\r\n                </Typography>\r\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                  <i>Anonymous</i>\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Praha, Czechia\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                 WebExpo 2022\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>)}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GamePage;\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Typography from '@mui/material/Typography';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useRealmApp } from './RealmApp';\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction HostPage() {\r\n  const [subscribed, setSubscribed] = useState(false);\r\n  const [game, setGame] = useState(null);\r\n  const [randomArtUrl, setRandomArtUrl] = useState(null);\r\n  const [retrievingRandomArtUrl, setRetrievingRandomArtUrl] = useState(false);\r\n  const [settingArtUrlForGame, setSettingArtUrlForGame] = useState(false);\r\n  const [selectedRow, setSelectedRow] = useState(-1);\r\n  const { gameId } = useParams();\r\n  const app = useRealmApp();\r\n  const { enableSubmissions, disableSubmissions, getRandomArtCard, setArtUrlForGame, selectWinningCaption } = app.currentUser.functions;\r\n\r\n  useEffect(() => {\r\n    async function subscribe() {\r\n      console.log(`Subscribing to change stream for game ${gameId}`);\r\n      setSubscribed(true);\r\n      const mongodb = app.currentUser.mongoClient('mongodb-atlas');\r\n      const gamesCollection = mongodb.db('classic-cards').collection('games');\r\n\r\n      const game = await gamesCollection.findOne({ game_id: gameId });\r\n\r\n      setGame(game);\r\n\r\n      if (!randomArtUrl) {\r\n        setRandomArtUrl(game.image_url);\r\n      }\r\n\r\n      const stream = gamesCollection.watch({ 'fullDocument._id': gameId });\r\n      \r\n      for await (const change of stream) {\r\n        console.log('Game object updated', change);\r\n        setGame(change.fullDocument)\r\n      }\r\n    }\r\n\r\n    if (!subscribed) {\r\n      subscribe();\r\n    }\r\n  }, [app]);\r\n\r\n  const toggleSubmissions = async () => {\r\n    if (!game.allow_submissions) {\r\n      console.log(`Enabling submissions for game ${gameId}`);\r\n      await enableSubmissions(gameId);\r\n    } else {\r\n      console.log(`Disabling submissions for game ${gameId}`);\r\n      await disableSubmissions(gameId);\r\n    }\r\n  };\r\n\r\n  const handleGetRandomArt = async () => {\r\n    setRetrievingRandomArtUrl(true);\r\n\r\n    const { primaryImage } = await getRandomArtCard();\r\n\r\n    setRandomArtUrl(primaryImage);\r\n    setRetrievingRandomArtUrl(false);\r\n  };\r\n\r\n  const handleSelectArt = async () => {\r\n    setSettingArtUrlForGame(true);\r\n\r\n    await setArtUrlForGame(gameId, randomArtUrl);\r\n\r\n    setSettingArtUrlForGame(false);\r\n  };\r\n\r\n  const handleSelectWinner = async () => {\r\n    await selectWinningCaption(gameId, game.submissions[selectedRow]);\r\n  };\r\n\r\n  if (!game) {\r\n    return <div>Loading game...</div>\r\n  }\r\n\r\n  return (\r\n    <div style={{ \r\n      display: 'flex', \r\n      flexDirection: 'column', \r\n      alignItems: 'center', \r\n      background: 'repeating-linear-gradient( to right, rgba(115, 169, 255, 0.4), rgba(115, 169, 255, 0.4) 100px, #fffef6 100px, #fffef6 200px)',\r\n      height: '100vh'}}>\r\n       <Typography variant=\"h1\" style={{fontFamily: 'Fleur De Leah', color: 'gold', textShadow: '2px 2px #000000'}}>\r\n          House of Memes\r\n       </Typography>\r\n       <Typography variant=\"h3\" style={{fontFamily: 'Fleur De Leah', color: 'black', fontWeight: 500}}>\r\n         <i> Cleverness creates champions</i>\r\n       </Typography>\r\n       <br/>\r\n\r\n      <ToggleButton\r\n        value=\"check\"\r\n        selected={game.allow_submissions}\r\n        onChange={() => {\r\n          toggleSubmissions();\r\n        }}\r\n      >\r\n        {game.allow_submissions ? 'Disable' : 'Enable'} Submissions\r\n      </ToggleButton>\r\n\r\n      <br/>\r\n\r\n      {Boolean(!game.allow_submissions) &&\r\n        <div style={{ display: 'flex', flexDirection: 'column', marginTop: 30 }}>\r\n          Please select an art piece\r\n\r\n          <img style={{ border: 10, borderColor: '#CCA604', borderStyle: 'ridge', height: 500, boxShadow: '2px 2px 6px #000', marginBottom: 50 }} src={randomArtUrl} />\r\n\r\n          <Button\r\n            onClick={handleGetRandomArt}\r\n            disabled={retrievingRandomArtUrl}\r\n            variant=\"outlined\"\r\n          >\r\n            Get random art piece\r\n          </Button>\r\n          <Button\r\n            onClick={handleSelectArt}\r\n            disabled={settingArtUrlForGame}\r\n            variant=\"contained\"\r\n          >\r\n            Make current art piece active\r\n          </Button>\r\n        </div>\r\n      }\r\n\r\n      \r\n      {Boolean(game.allow_submissions) &&\r\n        <div>\r\n          <img style={{ border: 10, borderColor: '#CCA604', borderStyle: 'ridge', height: 500 }} src={game.image_url} />\r\n        </div>\r\n      }\r\n\r\n      <div style={{marginTop: 50}}>\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n          <TableContainer sx={{ maxHeight: 300 }}>\r\n            <Table stickyHeader sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Submissions ({game.submissions.length})</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {game.submissions.map((caption, i) => (\r\n                  <TableRow\r\n                    key={`row-${i}`}\r\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                    onClick={() => setSelectedRow(i)}\r\n                    selected={i === selectedRow}  \r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">{caption}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n        <Button\r\n          disabled={selectedRow === -1}\r\n          onClick={handleSelectWinner}>\r\n            Select winner\r\n        </Button>\r\n      </div>\r\n      <div>\r\n      You are the Host! Game: {gameId}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HostPage;\r\n","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport HomePage from './HomePage';\nimport * as Realm from \"realm-web\";\nimport { useRealmApp, RealmAppProvider } from \"./RealmApp\";\nimport GamePage from './GamePage';\nimport HostPage from './HostPage';\n\nexport const APP_ID = 'house_of_memes-zajem';\n\nconst RequireLoggedInUser = ({ children }) => {\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n  const app = useRealmApp();\n\n  useEffect(() => {\n    async function login() {\n      setIsLoggingIn(true);\n\n      try {\n        await app.logIn(Realm.Credentials.anonymous());\n        console.log('Logged in!');\n      } catch (e) {\n        setIsLoggingIn(false);\n      }\n    }\n\n    if (!app.currentUser && !isLoggingIn) {\n      login();\n    }\n  }, [app, isLoggingIn]);\n\n  if (!app.currentUser) {\n    return <div>Loading...</div>\n  } else {\n    return children;\n  }\n};\n\nfunction App() {\n  return (\n    <RealmAppProvider appId={APP_ID}>\n      <RequireLoggedInUser>\n        <Router basename=\"/house-of-memes\">\n          <Switch>\n            <Route path=\"/game/:gameId/host\">\n              <HostPage />\n            </Route>\n            <Route path=\"/game/:gameId\">\n              <GamePage />\n            </Route>\n            <Route path=\"/game\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route path=\"/\">\n              <HomePage />\n            </Route>\n          </Switch>\n        </Router>\n      </RequireLoggedInUser>\n    </RealmAppProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}