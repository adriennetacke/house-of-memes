{"version":3,"sources":["RealmApp.js","HomePage.js","GamePage.js","HostPage.js","App.js","index.js"],"names":["RealmAppContext","React","createContext","useRealmApp","app","useContext","Error","RealmAppProvider","appId","children","useState","Realm","setApp","useEffect","currentUser","setCurrentUser","credentials","a","logIn","logOut","wrapped","Provider","value","HomePage","gameId","setGameId","history","useHistory","createGame","functions","handleCreateGame","push","Button","onClick","Divider","TextField","type","onChange","event","target","GamePage","subscribed","setSubscribed","submitted","setSubmitted","caption","setCaption","game","setGame","useParams","submitCaption","console","log","mongodb","mongoClient","gamesCollection","db","collection","findOne","game_id","stream","watch","change","fullDocument","subscribe","handleSubmitCaption","style","display","flexDirection","alignItems","background","Typography","variant","fontFamily","color","textShadow","fontWeight","Boolean","allow_submissions","image_url","marginTop","border","borderColor","borderStyle","height","marginBottom","src","Card","sx","width","CardContent","fullWidth","disabled","label","component","winning_caption","gutterBottom","mb","HostPage","randomArtUrl","setRandomArtUrl","retrievingRandomArtUrl","setRetrievingRandomArtUrl","settingArtUrlForGame","setSettingArtUrlForGame","selectedRow","setSelectedRow","enableSubmissions","disableSubmissions","getRandomArtCard","setArtUrlForGame","selectWinningCaption","toggleSubmissions","handleGetRandomArt","primaryImage","handleSelectArt","handleSelectWinner","submissions","ToggleButton","selected","boxShadow","Paper","overflow","TableContainer","maxHeight","Table","stickyHeader","minWidth","size","TableHead","TableRow","TableCell","length","TableBody","map","i","scope","RequireLoggedInUser","isLoggingIn","setIsLoggingIn","anonymous","login","App","exact","path","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba7a7d6b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as Realm from \"realm-web\";\r\n\r\nconst RealmAppContext = React.createContext();\r\n\r\nexport const useRealmApp = () => {\r\n  const app = React.useContext(RealmAppContext);\r\n  \r\n  if (!app) {\r\n    throw new Error(\r\n      `You must call useRealmApp() inside of a <RealmAppProvider />`\r\n    );\r\n  }\r\n  return app;\r\n};\r\n\r\nexport const RealmAppProvider = ({ appId, children }) => {\r\n  // Wrap the Realm.App object with React state.\r\n  const [app, setApp] = React.useState(new Realm.App(appId));\r\n  \r\n  React.useEffect(() => {\r\n    setApp(new Realm.App(appId));\r\n  }, [appId]);\r\n\r\n  // Wrap the Realm.App object's user state with React state\r\n  const [currentUser, setCurrentUser] = React.useState(app.currentUser);\r\n\r\n  async function logIn(credentials) {\r\n    // Call the logIn() method with the given credentials\r\n    await app.logIn(credentials);\r\n    // If successful, app.currentUser is the user that just logged in\r\n    setCurrentUser(app.currentUser);\r\n  }\r\n  async function logOut() {\r\n    // Log out the currently active user\r\n    // Call the logOut() method on the current user.\r\n    await app.currentUser?.logOut();\r\n    // If another user was logged in too, they're now the current user.\r\n    // Otherwise, app.currentUser is null.\r\n    // Call the setCurrentUser() method on the app's current user.\r\n    setCurrentUser(app.currentUser);\r\n  }\r\n\r\n  const wrapped = { ...app, currentUser, logIn, logOut };\r\n\r\n  return (\r\n    <RealmAppContext.Provider value={wrapped}>\r\n      {children}\r\n    </RealmAppContext.Provider>\r\n  );\r\n};\r\n","import Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport TextField from '@mui/material/TextField';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useRealmApp } from './RealmApp';\r\n\r\nfunction HomePage() {\r\n  const [gameId, setGameId] = useState('');\r\n  const history = useHistory();\r\n  const app = useRealmApp();\r\n  const { createGame } = app.currentUser.functions;\r\n\r\n  const handleGameIdChange = (event) => {\r\n    setGameId(event.target.value);\r\n  };\r\n\r\n  const handleJoinGame = () => {\r\n    history.push(`/game/${gameId}`);\r\n  };\r\n\r\n  const handleCreateGame = async () => {\r\n    const { gameId } = await createGame();\r\n\r\n    history.push(`/game/${gameId}/host`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      House of Memes - Home\r\n      \r\n      Create Game\r\n      <Button onClick={handleCreateGame}>Create</Button>\r\n\r\n      <Divider />\r\n\r\n      Join Game\r\n      <TextField\r\n        type=\"text\"\r\n        onChange={handleGameIdChange}\r\n        value={gameId}\r\n      />\r\n      <Button onClick={handleJoinGame}>Join</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport React, { useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useRealmApp } from './RealmApp';\r\n\r\nfunction GamePage() {\r\n  const [subscribed, setSubscribed] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [caption, setCaption] = useState('');\r\n  const [game, setGame] = useState({});\r\n  const { gameId } = useParams();\r\n  const app = useRealmApp();\r\n  const { submitCaption } = app.currentUser.functions;\r\n\r\n  useEffect(() => {\r\n    async function subscribe() {\r\n      console.log(`Subscribing to change stream for game ${gameId}`);\r\n      setSubscribed(true);\r\n      const mongodb = app.currentUser.mongoClient('mongodb-atlas');\r\n      const gamesCollection = mongodb.db('classic-cards').collection('games');\r\n\r\n      const game = await gamesCollection.findOne({ game_id: gameId });\r\n\r\n      setGame(game);\r\n\r\n      const stream = gamesCollection.watch({ 'fullDocument._id': gameId });\r\n      \r\n      for await (const change of stream) {\r\n        console.log('Game object updated', change);\r\n        setGame(change.fullDocument)\r\n      }\r\n    }\r\n\r\n    if (!subscribed) {\r\n      subscribe();\r\n    }\r\n  }, [app, gameId, subscribed]);\r\n\r\n  const handleCaptionChange = (event) => {\r\n    setCaption(event.target.value);\r\n  };\r\n\r\n  const handleSubmitCaption = async () => {\r\n    try {\r\n      await submitCaption(gameId, caption);\r\n    } finally {\r\n      setSubmitted(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', background: 'repeating-linear-gradient( to right, #fc9b90, #fc9b90 100px, #fffef6 100px, #fffef6 200px)'}}>\r\n       <Typography variant=\"h1\" style={{fontFamily: 'Fleur De Leah', color: 'gold', textShadow: '2px 2px #000000'}}>\r\n          House of Memes\r\n       </Typography>\r\n       <Typography variant=\"h3\" style={{fontFamily: 'Fleur De Leah', color: 'black', fontWeight: 500}}>\r\n         <i> Cleverness creates champions</i>\r\n       </Typography>\r\n      <br />\r\n      {Boolean(game.allow_submissions) && Boolean(game.image_url) &&\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: 30 }}>\r\n          <img style={{ border: 10, borderColor: '#CCA604', borderStyle: 'ridge', height: 500, marginBottom: 50 }} src={game.image_url} />\r\n\r\n\r\n          <Card sx={{ width: 420 }}>\r\n            <CardContent>\r\n              <Typography variant=\"body\" color=\"text.secondary\">\r\n                <b>Caption this art piece:</b>\r\n              </Typography>\r\n              <TextField fullWidth \r\n                onChange={handleCaptionChange} \r\n                value={caption} \r\n                disabled={submitted}\r\n                label=\"Enter a funny, tech-related caption...\" \r\n                variant=\"outlined\" \r\n                style={{marginTop: 20}}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Button \r\n            variant=\"contained\" \r\n            disabled={submitted} \r\n            onClick={handleSubmitCaption}\r\n            style={{marginTop: 20, marginBottom: 20}}\r\n          >\r\n            Submit caption\r\n          </Button>\r\n        </div>\r\n      }\r\n\r\n      {Boolean(!game.allow_submissions) && Boolean(!game.image_url) &&\r\n        <div>\r\n          <Typography component=\"p\">\r\n            Host is selecting an image. Please stand by!\r\n          </Typography>\r\n        </div>\r\n      }\r\n\r\n      {Boolean(!game.allow_submissions) && Boolean(game.image_url) &&\r\n        <div>\r\n          <img style={{ border: 10, borderColor: '#CCA604', borderStyle: 'ridge', height: 500 }} src={game.image_url} />\r\n\r\n          {Boolean(!game.winning_caption) && (\r\n            <Typography component=\"p\">\r\n              Host is selecting a winner. Please stand by!\r\n            </Typography>)}\r\n\r\n          {Boolean(game.winning_caption) && (\r\n            <Card sx={{ width: 420 }}>\r\n              <CardContent>\r\n                <Typography variant=\"h4\" color=\"text.secondary\" gutterBottom>\r\n                  {game.winning_caption}\r\n                </Typography>\r\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                  <i>Anonymous</i>\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Paris, France\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                 ServerlessDays Paris 2021\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>)}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GamePage;\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Typography from '@mui/material/Typography';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useRealmApp } from './RealmApp';\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction HostPage() {\r\n  const [subscribed, setSubscribed] = useState(false);\r\n  const [game, setGame] = useState(null);\r\n  const [randomArtUrl, setRandomArtUrl] = useState(null);\r\n  const [retrievingRandomArtUrl, setRetrievingRandomArtUrl] = useState(false);\r\n  const [settingArtUrlForGame, setSettingArtUrlForGame] = useState(false);\r\n  const [selectedRow, setSelectedRow] = useState(-1);\r\n  const { gameId } = useParams();\r\n  const app = useRealmApp();\r\n  const { enableSubmissions, disableSubmissions, getRandomArtCard, setArtUrlForGame, selectWinningCaption } = app.currentUser.functions;\r\n\r\n  useEffect(() => {\r\n    async function subscribe() {\r\n      console.log(`Subscribing to change stream for game ${gameId}`);\r\n      setSubscribed(true);\r\n      const mongodb = app.currentUser.mongoClient('mongodb-atlas');\r\n      const gamesCollection = mongodb.db('classic-cards').collection('games');\r\n\r\n      const game = await gamesCollection.findOne({ game_id: gameId });\r\n\r\n      setGame(game);\r\n\r\n      if (!randomArtUrl) {\r\n        setRandomArtUrl(game.image_url);\r\n      }\r\n\r\n      const stream = gamesCollection.watch({ 'fullDocument._id': gameId });\r\n      \r\n      for await (const change of stream) {\r\n        console.log('Game object updated', change);\r\n        setGame(change.fullDocument)\r\n      }\r\n    }\r\n\r\n    if (!subscribed) {\r\n      subscribe();\r\n    }\r\n  }, [app]);\r\n\r\n  const toggleSubmissions = async () => {\r\n    if (!game.allow_submissions) {\r\n      console.log(`Enabling submissions for game ${gameId}`);\r\n      await enableSubmissions(gameId);\r\n    } else {\r\n      console.log(`Disabling submissions for game ${gameId}`);\r\n      await disableSubmissions(gameId);\r\n    }\r\n  };\r\n\r\n  const handleGetRandomArt = async () => {\r\n    setRetrievingRandomArtUrl(true);\r\n\r\n    const { primaryImage } = await getRandomArtCard();\r\n\r\n    setRandomArtUrl(primaryImage);\r\n    setRetrievingRandomArtUrl(false);\r\n  };\r\n\r\n  const handleSelectArt = async () => {\r\n    setSettingArtUrlForGame(true);\r\n\r\n    await setArtUrlForGame(gameId, randomArtUrl);\r\n\r\n    setSettingArtUrlForGame(false);\r\n  };\r\n\r\n  const handleSelectWinner = async () => {\r\n    await selectWinningCaption(gameId, game.submissions[selectedRow]);\r\n  };\r\n\r\n  if (!game) {\r\n    return <div>Loading game...</div>\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', background: 'repeating-linear-gradient( to right, #fc9b90, #fc9b90 100px, #fffef6 100px, #fffef6 200px)'}}>\r\n       <Typography variant=\"h1\" style={{fontFamily: 'Fleur De Leah', color: 'gold', textShadow: '2px 2px #000000'}}>\r\n          House of Memes\r\n       </Typography>\r\n       <Typography variant=\"h3\" style={{fontFamily: 'Fleur De Leah', color: 'black', fontWeight: 500}}>\r\n         <i> Cleverness creates champions</i>\r\n       </Typography>\r\n       <br/>\r\n\r\n      <ToggleButton\r\n        value=\"check\"\r\n        selected={game.allow_submissions}\r\n        onChange={() => {\r\n          toggleSubmissions();\r\n        }}\r\n      >\r\n        {game.allow_submissions ? 'Disable' : 'Enable'} Submissions\r\n      </ToggleButton>\r\n\r\n      <br/>\r\n\r\n      {Boolean(!game.allow_submissions) &&\r\n        <div style={{ display: 'flex', flexDirection: 'column', marginTop: 30 }}>\r\n          Please select an art piece\r\n\r\n          <img style={{ border: 10, borderColor: '#CCA604', borderStyle: 'ridge', height: 500, boxShadow: '2px 2px 6px #000', marginBottom: 50 }} src={randomArtUrl} />\r\n\r\n          <Button\r\n            onClick={handleGetRandomArt}\r\n            disabled={retrievingRandomArtUrl}\r\n            variant=\"outlined\"\r\n          >\r\n            Get random art piece\r\n          </Button>\r\n          <Button\r\n            onClick={handleSelectArt}\r\n            disabled={settingArtUrlForGame}\r\n            variant=\"contained\"\r\n          >\r\n            Make current art piece active\r\n          </Button>\r\n        </div>\r\n      }\r\n\r\n      \r\n      {Boolean(game.allow_submissions) &&\r\n        <div>\r\n          <img style={{ border: 10, borderColor: '#CCA604', borderStyle: 'ridge', height: 500 }} src={game.image_url} />\r\n        </div>\r\n      }\r\n\r\n      <div style={{marginTop: 50}}>\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n          <TableContainer sx={{ maxHeight: 300 }}>\r\n            <Table stickyHeader sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Submissions ({game.submissions.length})</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {game.submissions.map((caption, i) => (\r\n                  <TableRow\r\n                    key={`row-${i}`}\r\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                    onClick={() => setSelectedRow(i)}\r\n                    selected={i === selectedRow}  \r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">{caption}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n        <Button\r\n          disabled={selectedRow === -1}\r\n          onClick={handleSelectWinner}>\r\n            Select winner\r\n        </Button>\r\n      </div>\r\n      <div>\r\n      You are the Host! Game: {gameId}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HostPage;\r\n","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport HomePage from './HomePage';\nimport * as Realm from \"realm-web\";\nimport { useRealmApp, RealmAppProvider } from \"./RealmApp\";\nimport GamePage from './GamePage';\nimport HostPage from './HostPage';\n\nexport const APP_ID = 'house_of_memes-zajem';\n\nconst RequireLoggedInUser = ({ children }) => {\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n  const app = useRealmApp();\n\n  useEffect(() => {\n    async function login() {\n      setIsLoggingIn(true);\n\n      try {\n        await app.logIn(Realm.Credentials.anonymous());\n        console.log('Logged in!');\n      } catch (e) {\n        setIsLoggingIn(false);\n      }\n    }\n\n    if (!app.currentUser && !isLoggingIn) {\n      login();\n    }\n  }, [app, isLoggingIn]);\n\n  if (!app.currentUser) {\n    return <div>Loading...</div>\n  } else {\n    return children;\n  }\n};\n\nfunction App() {\n  return (\n    <RealmAppProvider appId={APP_ID}>\n      <RequireLoggedInUser>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route exact path=\"/game\">\n              <Redirect to=\"/\" />\n            </Route>\n            <Route exact path=\"/game/:gameId\">\n              <GamePage />\n            </Route>\n            <Route exact path=\"/game/:gameId/host\">\n              <HostPage />\n            </Route>\n          </Switch>\n        </Router>\n      </RequireLoggedInUser>\n    </RealmAppProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}